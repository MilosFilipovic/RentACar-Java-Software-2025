/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;

import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import klase.RadnaSmena;
import klase.ZRS;
import klase.Zaposleni;
import komunikacija.Komunikacija;
import konstante.Operacije;
import modeli.TabelaZRS;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Milo≈°
 */
public class FormaZRS extends javax.swing.JFrame {

    /**
     * Creates new form FormaZRS
     */
    public FormaZRS() {
        initComponents();
        setLocationRelativeTo(null);
        tblRaspored.setModel(new TabelaZRS());
        popuniRaspored();
        popuniIDZaposlenih();
        popuniIDSmena();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRaspored = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbIDZaposlenih = new javax.swing.JComboBox<>();
        cbIDSmena = new javax.swing.JComboBox<>();
        btnUnesiZRS = new javax.swing.JButton();
        btnNazad = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ftxtDatumZaDodelu = new javax.swing.JFormattedTextField();
        btnObrisiRaspored = new javax.swing.JButton();
        btnIzmeniRaspored = new javax.swing.JButton();
        btnOsveziTabelu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Schedule");

        tblRaspored.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRaspored);

        jLabel1.setText("Make schedule");

        cbIDZaposlenih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIDZaposlenihActionPerformed(evt);
            }
        });

        cbIDSmena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIDSmenaActionPerformed(evt);
            }
        });

        btnUnesiZRS.setText("Insert");
        btnUnesiZRS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnesiZRSActionPerformed(evt);
            }
        });

        btnNazad.setText("Back");
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        jLabel2.setText("Insert date (yyyy-MM-dd):");

        ftxtDatumZaDodelu.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

        btnObrisiRaspored.setText("Delete");
        btnObrisiRaspored.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiRasporedActionPerformed(evt);
            }
        });

        btnIzmeniRaspored.setText("Change");
        btnIzmeniRaspored.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniRasporedActionPerformed(evt);
            }
        });

        btnOsveziTabelu.setText("Refresh table");
        btnOsveziTabelu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsveziTabeluActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbIDZaposlenih, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbIDSmena, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ftxtDatumZaDodelu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnIzmeniRaspored, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnObrisiRaspored, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUnesiZRS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOsveziTabelu))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNazad))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbIDZaposlenih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIDSmena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIzmeniRaspored))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ftxtDatumZaDodelu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnObrisiRaspored))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUnesiZRS)
                    .addComponent(btnOsveziTabelu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(btnNazad)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed
        GlavnaForma gf = new GlavnaForma();
        this.dispose();
    }//GEN-LAST:event_btnNazadActionPerformed

    private void btnUnesiZRSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnesiZRSActionPerformed
        if (ftxtDatumZaDodelu.getText().isEmpty() || cbIDSmena.getSelectedIndex() == -1 || cbIDZaposlenih.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "All fields must be filled!");
            return;
        }

        Zaposleni zaposleni = (Zaposleni) cbIDZaposlenih.getSelectedItem();
        int idzap=zaposleni.getIdZaposleni();
        int idsmene = Integer.parseInt((String) cbIDSmena.getSelectedItem());
        
        
        LocalDate datum = LocalDate.parse(ftxtDatumZaDodelu.getText());
        
        ZRS zrs = new ZRS(datum, idzap, idsmene);
        

        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.DODAJ_ZRS);
        kz.setParametar(zrs);

        Komunikacija.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();

        
        
        boolean uspesno = (boolean) so.getOdgovor();

        if (uspesno) {
            JOptionPane.showMessageDialog(this, "New shcedule created!");
            
            
        } else {
            JOptionPane.showMessageDialog(this, "Error");
        }
    }//GEN-LAST:event_btnUnesiZRSActionPerformed

    private void cbIDZaposlenihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIDZaposlenihActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbIDZaposlenihActionPerformed

    private void btnObrisiRasporedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiRasporedActionPerformed
        int row = tblRaspored.getSelectedRow();

        

        if (row != -1 && tblRaspored.getColumnCount() > 2) {
            TabelaZRS tzrs = (TabelaZRS) tblRaspored.getModel();
            
            LocalDate datum = (LocalDate) tblRaspored.getValueAt(row, 0);
            int idzap = (int) tblRaspored.getValueAt(row, 1);
            int idsmene = (int) tblRaspored.getValueAt(row, 2);
            ZRS objekat = new ZRS(datum, idzap, idsmene);

            tzrs.obrisiRaspored(row);
            
            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(Operacije.OBRISI_ZRS);
            kz.setParametar(objekat);

            Komunikacija.getInstance().posaljiZahtev(kz);
            ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();

            tzrs.fireTableDataChanged();

            boolean obrisan = (boolean) so.getOdgovor();

            if (obrisan) {
                JOptionPane.showMessageDialog(this, "Shift deleted!");

            } else {
                JOptionPane.showMessageDialog(this, "Error");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Element not selected!");
        }
    }//GEN-LAST:event_btnObrisiRasporedActionPerformed

    private void btnIzmeniRasporedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniRasporedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnIzmeniRasporedActionPerformed

    private void btnOsveziTabeluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsveziTabeluActionPerformed
        popuniRaspored();
    }//GEN-LAST:event_btnOsveziTabeluActionPerformed

    private void cbIDSmenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIDSmenaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbIDSmenaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaZRS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaZRS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaZRS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaZRS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormaZRS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeniRaspored;
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnObrisiRaspored;
    private javax.swing.JButton btnOsveziTabelu;
    private javax.swing.JButton btnUnesiZRS;
    private javax.swing.JComboBox<String> cbIDSmena;
    private javax.swing.JComboBox<Zaposleni> cbIDZaposlenih;
    private javax.swing.JFormattedTextField ftxtDatumZaDodelu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRaspored;
    // End of variables declaration//GEN-END:variables

    private void popuniIDZaposlenih() {
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_CB_ZAPOSLENIH);

        Komunikacija.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();

        ArrayList<Zaposleni> zaposleni = (ArrayList<Zaposleni>) so.getOdgovor();

        cbIDZaposlenih.removeAllItems();

        for (Zaposleni z : zaposleni) {
            cbIDZaposlenih.addItem(z);
        }
    }

    private void popuniIDSmena() {
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_CB_SMENE);

        Komunikacija.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();

        ArrayList<RadnaSmena> radneSmene = (ArrayList<RadnaSmena>) so.getOdgovor();

        cbIDSmena.removeAllItems();

        for (RadnaSmena rsmena : radneSmene) {
            cbIDSmena.addItem(rsmena.toString());
        }
    }

    private void popuniRaspored() {
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.POPUNI_ZRS);

        Komunikacija.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();

        ArrayList<ZRS> zrs = (ArrayList<ZRS>) so.getOdgovor();

        tblRaspored.removeAll();

         
        TabelaZRS tzrs = (TabelaZRS) tblRaspored.getModel();
        tzrs.setZRSmena(zrs);
    }
}
